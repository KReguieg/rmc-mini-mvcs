WEBVTT

00:00.150 --> 00:04.260
Tout d'abord, regardons la version sans beaucoup de MVCs ajoutés.

00:05.260 --> 00:11.860
Nous sommes ici dans un projet unity vide où j'ai ajouté le mini framework MVCs ainsi que les échantillons.

00:12.070 --> 00:18.040
Voici la structure des dossiers pour le jeu Rollerball sans beaucoup de choses depuis que nous avons regardé la structure des dossiers

00:18.040 --> 00:19.490
d'autres échantillons.

00:19.510 --> 00:20.640
Entrons dans le vif du sujet.

00:20.650 --> 00:23.330
Tout d'abord, lançons la scène et voyons comment elle se déroule.

00:23.350 --> 00:28.840
L'interface utilisateur se met à jour et indique que j'ai un score nul et que les instructions sont d'utiliser les touches fléchées.

00:28.840 --> 00:31.510
J'ai également un bouton de redémarrage sur lequel je peux cliquer.

00:32.320 --> 00:36.430
Je vais utiliser les quatre touches fléchées pour déplacer la balle.

00:38.280 --> 00:42.660
Vous ne pouvez peut-être pas l'entendre dans la vidéo, mais un bruit est émis à chaque fois que je ramasse une balle

00:42.660 --> 00:49.170
de ces pickups, et le reflète dans le score mis à jour de l'interface utilisateur, le statut a changé en "vous gagnez".

00:49.170 --> 00:51.900
Le jeu est donc terminé et je ne peux plus saisir de données.

00:51.900 --> 00:55.170
Je ne peux plus saisir avec les touches, mais je vais cliquer sur le bouton de redémarrage.

00:55.170 --> 00:58.080
Le bouton de redémarrage affiche une invite que je peux annuler.

01:01.230 --> 01:02.520
Ou je peux confirmer.

01:05.820 --> 01:10.020
La confirmation redémarre le jeu comme si je n'avais pas encore joué et je peux recommencer à jouer.

01:10.830 --> 01:11.520
C'est tout.

01:12.000 --> 01:13.850
Nous voici dans le script d'exemple.

01:13.860 --> 01:19.170
Comme pour les autres exemples, le script d'exemple de haut niveau étend le comportement de mono.

01:19.170 --> 01:22.170
De cette façon, il peut être placé sur un objet de jeu dans la scène.

01:22.170 --> 01:28.200
Nous avons trois champs sérialisés ici pour que cet exemple puisse atteindre la scène et accéder à un objet de jeu.

01:28.200 --> 01:34.020
un objet de jeu pour le joueur, un objet de jeu pour l'interface utilisateur et une liste de tous les objets de ramassage de la scène.

01:34.020 --> 01:36.480
Nous maintenons un état de haut niveau pour.

01:36.510 --> 01:38.460
Le jeu est-il actuellement terminé ?

01:38.460 --> 01:42.960
Le jeu est-il actuellement en pause et d'autres valeurs de notation ?

01:43.740 --> 01:46.770
Et d'autres valeurs de score dans la méthode de démarrage.

01:46.770 --> 01:53.130
Nous écoutons depuis le script principal du jeu jusqu'à l'interface utilisateur du lecteur pour certains événements clés, ici dans la section

01:53.130 --> 01:58.290
qui s'exécute à chaque image tant que la scène est en cours d'exécution, nous avons notre boucle de jeu principale.

01:58.290 --> 02:04.080
Si, à tout moment, le jeu est terminé ou si nous sommes en pause, nous sortons de la boucle pour que rien d'autre ne se produise.

02:04.080 --> 02:07.590
C'est ce script que nous avons ici qui contrôle les ramassages.

02:07.590 --> 02:13.590
Il parcourt en boucle toutes les bennes et les fait pivoter pour leur donner une rotation cosmétique.

02:13.590 --> 02:18.750
La raison pour laquelle cela est fait ici et non à l'intérieur du pick-up, par exemple, est que lorsque le jeu

02:18.750 --> 02:21.450
s'interrompt, les pickups s'interrompent également.

02:21.450 --> 02:27.270
Enfin, à partir du champ d'application du jeu, nous capturons les entrées de l'utilisateur et les transmettons au joueur, de sorte que

02:27.270 --> 02:28.890
la balle puisse rouler ici.

02:28.890 --> 02:34.230
Dans la méthode de chargement, nous chargeons un fichier texte local pour obtenir le nombre maximum de points nécessaires pour

02:34.230 --> 02:34.650
gagner.

02:34.650 --> 02:40.380
Il charge le chiffre trois, comme nous l'avons vu dans les démonstrations précédentes, il s'agit d'un exemple, juste à titre d'excuse.

02:40.380 --> 02:41.730
d'utiliser la couche de service.

02:41.730 --> 02:43.770
Une fois que nous avons examiné la version mini MVC.

02:43.770 --> 02:49.590
Bien sûr, cette valeur pourrait être codée en dur ici, mais au lieu de cela, nous la chargeons à partir d'un script, juste à titre d'exemple

02:49.590 --> 02:50.520
de données externes.

02:50.520 --> 02:56.760
Périodiquement, lorsque le jeu veut mettre à jour l'interface utilisateur à l'écran, nous pouvons appeler cette méthode à tout moment

02:56.760 --> 03:00.990
que le bouton de l'interface utilisateur pour le redémarrage est cliqué, cette méthode est exécutée.

03:00.990 --> 03:07.530
Nous mettons le jeu en pause, instançons une fenêtre de dialogue à l'écran qui flotte au-dessus du reste du jeu, et nous exécutons cette méthode.

03:07.530 --> 03:12.570
la conséquence Si l'utilisateur clique, nous annulons dans la fenêtre de dialogue et nous gérons la conséquence.

03:12.570 --> 03:16.920
Si l'utilisateur confirme, redémarrer le jeu à chaque fois que le joueur entre en collision avec le pick-up.

03:16.920 --> 03:21.630
Cette méthode est appelée, l'objet pickup devient invisible et un son est joué.

03:21.630 --> 03:28.800
Le score compte de 0 à 1, puis de 2 à 3, et lorsqu'il atteint la valeur maximale requise, c'est-à-dire

03:28.800 --> 03:32.090
généralement trois, le jeu est terminé et vous gagnez.

03:32.100 --> 03:34.050
C'est tout pour la logique de base du jeu.

03:34.050 --> 03:35.760
Jetons un coup d'œil à la hiérarchie de la scène.

03:35.760 --> 03:41.640
Dans la hiérarchie de la scène, si je sélectionne l'exemple de jeu lui-même, nous voyons quelques champs sérialisés

03:41.640 --> 03:47.130
dans l'inspecteur, y compris une référence au joueur, à l'interface utilisateur et à chaque pickup de la scène.

03:47.130 --> 03:52.800
Le joueur est ici avec le script player, l'UI est ici avec le script UI, et chacun de nos pickups

03:52.800 --> 03:55.860
est stocké ici, sous le même objet de jeu parent.

03:55.860 --> 03:57.630
Chacun d'entre eux est surmonté d'un script de ramassage.

03:57.630 --> 04:01.170
Jetons un dernier coup d'œil au jeu qui tourne à nouveau pour que je puisse appuyer sur play.

04:01.170 --> 04:03.150
Je peux me promener ici.

04:03.360 --> 04:06.780
Remarquez que les ramasseurs tournent.

04:09.370 --> 04:14.950
Et si je clique sur le bouton de redémarrage alors que l'invite est ici, alors que cette fenêtre de dialogue est affichée,

04:14.950 --> 04:21.220
Les cubes ne tournent pas. C'est un petit détail visuel, mais il indique que ce jeu est capable de

04:21.220 --> 04:26.710
sauvegarder l'état de la pause et de la fin du jeu.

04:26.710 --> 04:29.710
Regarder quand je gagne la cueillette, arrêter la rotation aussi.

04:36.290 --> 04:42.290
J'en ai un et le pickup s'arrête de tourner en gérant l'état comme si le jeu était terminé et comme si le jeu était en pause.

04:42.290 --> 04:48.050
mais le fait qu'ils soient orchestrés en douceur tout au long des préoccupations, comme nous le voyons ici, démontre

04:48.050 --> 04:49.850
une bonne et simple conception de jeu.
