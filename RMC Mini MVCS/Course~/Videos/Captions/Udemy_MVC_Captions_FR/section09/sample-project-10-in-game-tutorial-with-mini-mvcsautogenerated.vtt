WEBVTT

00:00.290 --> 00:00.740
Très bien.

00:00.740 --> 00:04.940
Parlons de la façon dont vous feriez un tutoriel dans un jeu.

00:06.730 --> 00:14.230
Tout d'abord, pourquoi un didacticiel en jeu est-il utile à l'expérience de l'utilisateur final et pourquoi est-ce un défi ?

00:14.230 --> 00:15.280
pour les développeurs ?

00:15.310 --> 00:25.000
Souvent, lorsque nous jouons à des jeux vidéo, il y a suffisamment de règles sur le monde du jeu, sur la façon d'interagir,

00:25.000 --> 00:30.010
de faire les saisies qu'il faut le dire explicitement à l'utilisateur.

00:30.370 --> 00:37.180
Un didacticiel est un dispositif qui, dans les premières minutes, dix minutes ou une heure de jeu, donne à l'utilisateur la possibilité de se familiariser avec le jeu.

00:37.180 --> 00:39.490
informations supplémentaires à l'utilisateur.

00:39.490 --> 00:46.720
Ainsi, lorsqu'il s'approche d'un personnage, vous lui expliquez comment appuyer sur un bouton pour entamer la conversation.

00:46.720 --> 00:51.430
Alors qu'après cinq heures de jeu, vous n'auriez pas besoin de leur montrer à chaque fois.

00:51.430 --> 00:57.640
Il s'agit donc de quelque chose de temporaire, souvent fait au début ou la première fois que l'utilisateur rencontre

00:57.640 --> 00:58.360
quelque chose.

00:58.540 --> 01:01.840
C'est pourquoi nous voulons l'avoir maintenant.

01:01.840 --> 01:03.100
Pourquoi est-ce un défi ?

01:03.130 --> 01:06.260
Parce que ce n'est pas toujours le cas.

01:06.260 --> 01:10.370
Par exemple, lorsque nous créons des fonctions de jeu, elles sont toujours disponibles ici.

01:10.370 --> 01:15.460
Nous voulons que cela ne se produise qu'au cours de la première minute, des 10 premières minutes ou de la première heure, comme je l'ai dit.

01:15.470 --> 01:21.530
Vous pouvez donc soit passer en revue tous vos systèmes de jeu et leur demander de dire : "Hé, si nous sommes dans la première minute", soit "si nous sommes dans la première heure", soit "si nous sommes dans la première minute".

01:21.530 --> 01:26.030
dix premières minutes, faites cette chose supplémentaire, mais sinon ne faites pas cette chose supplémentaire.

01:26.030 --> 01:30.530
Mais cela devient un bout de code qu'il faut intégrer dans de nombreux systèmes différents.

01:30.530 --> 01:34.960
Ce que nous allons voir ici, c'est comment faire des tutoriels dans le jeu d'une manière différente.

01:34.970 --> 01:40.970
Nous allons faire en sorte que la logique de base du jeu ne sache rien des didacticiels, puis nous aurons un didacticiel

01:40.970 --> 01:47.810
s'assoit sur le côté et écoute ce que fait le jeu principal, qui ne sera actif qu'à partir du moment où la logique du jeu principal sera active.

01:47.810 --> 01:53.900
pendant les dix premières minutes, puis si elle disparaît, le jeu principal n'en a jamais eu connaissance et ne sait pas ce qu'il en est.

01:53.900 --> 01:54.920
plus.

01:54.920 --> 01:56.870
Voyons donc comment cela fonctionnerait.

01:57.650 --> 02:04.070
Cet exposé et cette scène de démonstration font partie d'un cours plus large, qui est la mini-architecture pour

02:04.070 --> 02:06.920
cours sur l'unité que vous pouvez obtenir en cliquant sur le lien ci-dessous.

02:06.950 --> 02:12.740
Il s'agit d'un cours payant qui vous permet de voir des exemples de fonctionnement de cette fonctionnalité.

02:12.740 --> 02:15.110
Sur la théorie de la conception de logiciels.

02:15.110 --> 02:16.700
Voici un aperçu approfondi.

02:16.700 --> 02:22.430
Examiner les modèles de conception, les principes de conception, apprendre l'UML, la création de diagrammes, couvrir les différents aspects de la conception de logiciels.

02:22.460 --> 02:26.360
types d'architectures d'unité et pourquoi vous pourriez en avoir besoin.

02:26.930 --> 02:33.020
L'alerte spoiler ici est que vous les voulez parce qu'elles vous aident à mettre à l'échelle les projets, à créer des projets plus faciles à maintenir et à améliorer.

02:33.020 --> 02:40.010
et d'avoir des flux de travail plus exempts d'erreurs lors de la construction d'un projet évolutif.

02:40.700 --> 02:42.650
Il comprend beaucoup de choses différentes.

02:42.680 --> 02:48.740
Nous avons ajouté une dizaine de démonstrations supplémentaires depuis la création du cours.

02:48.740 --> 02:52.550
l'une d'entre elles porte sur la réalisation d'un didacticiel, et c'est celle que nous allons examiner maintenant.

02:52.910 --> 02:54.830
Alors, passons à unity.

02:55.580 --> 03:05.240
Si vous obtenez le paquetage mini MVCs gratuitement sur Git ou dans le cadre du cours, vous téléchargerez et installerez

03:05.240 --> 03:07.300
en suivant les instructions de Git.

03:07.310 --> 03:11.840
Ensuite, dans l'onglet samples, vous importerez les exemples.

03:11.840 --> 03:14.680
C'est ce que nous allons voir sur le côté.

03:14.840 --> 03:15.950
Je l'ai déjà fait.

03:15.950 --> 03:24.560
Donc quand je vais plus loin et que j'ouvre le mini-tutoriel, nous pouvons voir que nous avons quelques préfabriqués, nous avons

03:24.560 --> 03:31.370
la scène, nous avons un peu de code ici qui contient la vue du didacticiel et le contrôleur du didacticiel.

03:31.490 --> 03:33.350
Lançons l'exécution.

03:40.760 --> 03:45.580
Oui, je vais en fait montrer quelque chose avant d'entrer dans le vif du sujet, car remarquez le didacticiel.

03:45.590 --> 03:46.640
Eh bien, je vais juste faire un beau gros.

03:47.870 --> 03:56.090
Le tutoriel qui se trouve dans cette scène est dans la boîte dans le coin supérieur où il est écrit "tutorial enter".

03:56.090 --> 03:57.770
le nom d'utilisateur et le mot de passe.

03:57.800 --> 04:04.010
Par souci de simplicité, j'imite ici le fonctionnement d'une expérience Web.

04:04.040 --> 04:07.130
Souvent, nous nous connectons à des expériences web.

04:07.130 --> 04:14.120
Vous avez un nom d'utilisateur et un mot de passe qui constituent l'essentiel de l'écran, c'est le mini exemple de connexion.

04:14.120 --> 04:21.530
Cet exemple se trouve dans une scène différente pour illustrer à quel point ce tutoriel et la partie principale de l'écran sont distincts.

04:21.530 --> 04:22.880
logique du jeu.

04:22.880 --> 04:29.000
La mini-connexion fait l'objet d'une scène séparée, ce qui permet de l'examiner en profondeur et d'en tirer des enseignements.

04:29.000 --> 04:35.480
pouvez voir combien d'éléments peuvent être utilisés pour mettre un nom d'utilisateur, un mot de passe, un bouton de connexion, un bouton de déconnexion.

04:35.480 --> 04:39.920
Il me dit donc ici que le mot de passe est un, deux, trois, quatre.

04:39.920 --> 04:46.550
Donc si je vais de l'avant et que je tape le nom, je vais taper mon nom.

04:47.480 --> 04:48.200
Comme ça.

04:49.490 --> 04:53.660
Ensuite, je commencerai à taper le mot de passe si je tape pass.

04:55.360 --> 05:02.440
Remarquez que lorsque je commence à taper le mot de passe, le didacticiel le connaît et vous dit d'abord, hé, allez mettre le nom d'utilisateur et le mot de passe.

05:02.440 --> 05:03.190
le mot de passe.

05:03.190 --> 05:09.010
Mais dès que vous avez entré le nom d'utilisateur et que vous commencez à taper le mot de passe, il vous dit : " Oh, vous pourriez... ".

05:09.010 --> 05:10.720
être prêt à cliquer sur log in.

05:10.720 --> 05:18.640
Il s'agit donc d'un exemple arbitraire de la façon dont le didacticiel examine votre progression dans le noyau.

05:18.640 --> 05:22.140
de l'utilisateur et vous donne des conseils utiles.

05:22.150 --> 05:26.530
Il pourrait vous dire : " Voici un personnage avec lequel vous pouvez interagir dans le jeu ".

05:26.530 --> 05:32.740
Cliquez sur A pour entamer le dialogue et une fois que l'utilisateur s'est familiarisé avec ce personnage, il ne faut jamais lui montrer la fenêtre de dialogue.

05:32.740 --> 05:34.840
cliquer sur A pour relancer le dialogue.

05:34.840 --> 05:35.180
C'est ça ?

05:35.260 --> 05:36.370
Même chose ici.

05:36.370 --> 05:39.700
Ceci est assis sur le côté, montrant des informations.

05:39.700 --> 05:44.230
Cet élément pourrait être disponible, peut-être seulement temporairement, dans le cadre du jeu.

05:44.230 --> 05:51.880
Mais l'idée centrale ici est que le jeu lui-même n'est pas au courant de l'existence du didacticiel.

05:52.300 --> 05:52.870
C'est ça ?

05:53.350 --> 05:54.700
Puis je clique sur log in.

05:54.700 --> 05:55.730
J'obtiens un échec.

05:55.730 --> 05:58.130
Le message indique que vous avez échoué au tutoriel, essayez à nouveau.

05:58.130 --> 06:01.250
Je me déconnecte et j'utilise le mot de passe.

06:01.250 --> 06:02.540
Un, deux, trois, quatre.

06:02.540 --> 06:05.600
Ce qui est, comme le montre l'indice, la vraie réponse.

06:05.630 --> 06:06.470
Je vais me connecter.

06:06.470 --> 06:10.070
Il est indiqué que vous avez terminé le tutoriel, voyez comme c'est agréable.

06:10.070 --> 06:12.920
Ce tutoriel se trouve sur le côté et vous donne des conseils utiles.

06:12.920 --> 06:15.730
Il pourrait certainement vous donner beaucoup plus d'indications que ce qui est montré ici.

06:15.740 --> 06:17.960
Voyons comment fonctionne cette structure.

06:19.050 --> 06:27.150
Nous avons donc ici la vue du didacticiel, qui est l'interface utilisateur avec le...

06:28.640 --> 06:29.190
Nous y voilà.

06:29.210 --> 06:30.520
Le titre et le corps.

06:30.530 --> 06:32.420
C'est donc là, dans un coin, que ça se passe.

06:32.420 --> 06:33.710
Interface utilisateur Unity simple.

06:35.740 --> 06:42.700
Ensuite, le Mini ici va prendre une référence de cette vue, que nous avons ici.

06:42.970 --> 06:45.370
Voyons maintenant comment le Mini est structuré.

06:47.230 --> 06:48.760
Il y a donc un commentaire ici.

06:48.760 --> 06:49.630
Je vais le lire.

06:49.660 --> 06:53.170
L'exemple est le point d'entrée principal de la démo.

06:53.440 --> 06:56.990
Un didacticiel n'a pas besoin de charger une scène distincte.

06:57.010 --> 07:03.850
Cela n'est fait ici que pour démontrer qu'il s'agit d'un code sans aucun rapport qui peut correctement décorer les images de la démo.

07:03.880 --> 07:07.360
une expérience utilisateur au dessus d'un système sans le savoir.

07:07.360 --> 07:10.660
Nous pourrions donc tout avoir dans cette scène.

07:10.660 --> 07:16.300
Mais je montre que, si nous chargeons cet exemple de connexion, il peut être tellement séparé qu'il peut être

07:16.300 --> 07:17.230
posé sur le dessus.

07:17.230 --> 07:21.190
Et cette illustration de la séparation est agréable, n'est-ce pas ?

07:21.580 --> 07:23.920
Ici, nous allons prendre The View.

07:24.950 --> 07:30.510
La plupart des scènes de démonstration fournies - en fait, toutes les scènes de démonstration, à l'exception de celle-ci - sont fournies avec le logiciel The View.

07:30.510 --> 07:32.870
Mini sont des démos à une scène.

07:32.930 --> 07:41.990
Mais là encore, après avoir chargé la mini, je vais de l'avant et je charge cet exemple de connexion avec la mini,

07:42.140 --> 07:44.600
qui n'est que la partie connexion.

07:44.600 --> 07:50.630
Et il a été créé bien avant cette démo et il ne sait rien du didacticiel fonctionnant au-dessus de

07:50.630 --> 07:50.900
sur le tutoriel.

07:50.900 --> 07:53.450
Il n'a même pas eu besoin d'être mis à jour pour cela.

07:53.630 --> 07:57.620
Ensuite, en bas, je crée un pont vers la Mini.

08:02.760 --> 08:03.840
Et ensuite.

08:07.330 --> 08:09.040
Je fais le câblage ici.

08:09.250 --> 08:15.880
Ce que je fais dans la création d'un pont, c'est que je récupère le modèle de la scène chargée pour que vous puissiez regarder

08:15.880 --> 08:17.800
le code ci-dessus pour voir comment cela est fait.

08:17.800 --> 08:24.790
Mais maintenant que je sais, ok, voici le modèle de la scène chargée, nous devons, en tant que didacticiel, écouter

08:24.790 --> 08:25.600
dans ce modèle.

08:25.840 --> 08:36.640
J'initialise donc la vue en utilisant le contexte de la logique de base, puis je crée un contrôleur de didacticiel

08:36.640 --> 08:37.390
ici.

08:38.330 --> 08:41.570
Et je passe le modèle de connexion et la vue.

08:41.660 --> 08:44.930
Voici donc la logique du didacticiel.

08:44.930 --> 08:47.930
Jetons un coup d'oeil au contrôleur et voyons comment il fonctionne.

08:52.110 --> 08:58.830
Ce que je fais, c'est que je mets à jour les didacticiels, la petite fenêtre qui contient le mot "didacticiel", juste pour lancer le processus de création de didacticiels.

08:58.830 --> 08:59.790
clarté.

08:59.910 --> 09:04.230
Puis je commence à écouter le modèle de connexion.

09:04.470 --> 09:07.150
N'oubliez pas que je charge cette scène supplémentaire.

09:07.170 --> 09:14.100
Je récupère le modèle car il a été créé en utilisant Mini, donc je peux récupérer le modèle de connexion à partir de

09:14.100 --> 09:18.390
puis j'écoute une valeur appelée Can I log in ?

09:19.010 --> 09:23.180
Ensuite, j'écoute différentes commandes.

09:23.300 --> 09:25.820
Ainsi, à chaque fois que l'on se connecte.

09:28.030 --> 09:31.630
Le bouton de connexion est activé si la connexion est vraie.

09:31.630 --> 09:35.820
Je suis donc en mesure d'écouter cela afin de pouvoir suivre le processus.

09:35.830 --> 09:44.020
Ensuite, chaque fois que la commande de déconnexion se produit, chaque fois que la commande d'ouverture de session est soumise, et chaque fois que la commande d'ouverture de session est soumise.

09:44.020 --> 09:45.730
connexion terminée.

09:45.730 --> 09:48.610
J'ai donc pu écouter quatre choses.

09:48.610 --> 09:56.500
En théorie, si vous développez le didacticiel et la logique de base en même temps, l'étape serait la suivante

09:56.500 --> 09:57.340
ressemblerait à ceci.

09:57.340 --> 10:03.310
Une fois que vous avez compris la structure de base que nous avons ici, disons que vous avez introduit l'idée de marcher

10:03.310 --> 10:06.220
et de parler aux personnages dans un jeu de rôle.

10:06.220 --> 10:13.810
Vous voudriez que votre modèle de connexion de base expose ici un événement tel que Started conversation with character equals

10:13.810 --> 10:14.470
Vrai.

10:14.500 --> 10:19.960
Ou voici une nouvelle commande qui dit la commande de début de conversation.

10:19.990 --> 10:26.470
Dans les deux cas, il faut que ces commandes fassent partie de la logique de base du jeu et qu'elles soient mises à jour et envoyées.

10:26.500 --> 10:33.260
Le didacticiel peut alors s'y raccorder, comme nous le voyons ici, soit par le biais du modèle, soit par le biais de l'interface de programmation.

10:33.260 --> 10:37.490
gestionnaire de commandes contextuelles et être en mesure d'écouter ces choses.

10:37.640 --> 10:45.200
Donc l'utilité ici, nous voyons que chaque fois que la déconnexion se produit dans la logique de base, je vais

10:45.200 --> 10:53.180
mettre à jour le texte du tutoriel pour qu'il soit la première phrase de ok, il est temps d'entrer le login, d'entrer le nom d'utilisateur

10:53.180 --> 10:53.990
et le mot de passe.

10:54.440 --> 11:01.430
Chaque fois que l'on peut se connecter, on modifie ce qui, parce que la logique de base sait que l'on devrait pouvoir se connecter à ce moment-là...

11:01.430 --> 11:02.510
moment ou non ?

11:02.540 --> 11:07.340
Le didacticiel se met à jour à nouveau et donne un peu plus d'informations.

11:07.700 --> 11:15.680
Chaque fois que l'utilisateur a soumis une demande de connexion, le didacticiel indique qu'il attend le résultat et chaque fois que l'utilisateur a soumis une demande de connexion, le didacticiel indique qu'il attend le résultat.

11:15.680 --> 11:21.920
la connexion est terminée, il écoute et dit : "Si vous avez réussi, c'est que vous avez réussi".

11:21.920 --> 11:25.790
dans le tutoriel ou si vous n'avez pas réussi, vous avez échoué dans le tutoriel.

11:25.820 --> 11:29.360
Il s'agit donc d'une démonstration arbitraire.

11:29.720 --> 11:32.120
C'est un exemple un peu ridicule.

11:32.780 --> 11:34.910
Pour donner de l'aide à un formulaire comme celui-ci.

11:34.910 --> 11:40.520
Mais vous pouvez imaginer que dans un jeu, il pourrait y avoir de nombreuses parties différentes de la logique de base que vous voudriez

11:40.520 --> 11:43.370
exposer au système de tutorat.

11:43.580 --> 11:50.450
En théorie, deux équipes différentes, pour illustrer encore une fois la séparation, pourraient travailler l'une sur l'autre.

11:50.450 --> 11:55.730
travailler sur la logique de base du jeu et l'autre pourrait travailler sur la logique du tutoriel ainsi que sur d'autres systèmes.

11:55.730 --> 12:01.490
Mais je montre juste la séparation ici et ils parlent tous à travers le modèle de connexion et

12:01.490 --> 12:02.270
les commandes.

12:02.270 --> 12:03.170
C'est donc cela.

12:03.200 --> 12:05.390
Regardons maintenant la démo fonctionner à nouveau.

12:07.120 --> 12:12.220
Encore une fois, la plus grande partie de l'écran est chargée à partir d'une autre scène.

12:12.220 --> 12:15.450
Il ne sait pas qu'il a été chargé dans le tutoriel.

12:15.460 --> 12:22.060
Le didacticiel se trouve au-dessus et a juste un peu de vue dans le coin ici et montre bien qu'il s'agit d'une scène.

12:22.060 --> 12:23.050
le didacticiel.

12:23.050 --> 12:25.000
Entrez le nom d'utilisateur et le mot de passe.

12:25.000 --> 12:27.400
Je commence à taper et ça se met à jour.

12:27.400 --> 12:29.860
Il me dit ok, cliquez sur log in.

12:30.520 --> 12:31.800
Je clique sur login.

12:31.840 --> 12:33.610
Il est indiqué Waiting for result.

12:33.610 --> 12:35.410
Puis il me dit : "Oh, you failed" (Oh, vous avez échoué).

12:35.470 --> 12:37.150
Et je clique sur Déconnexion.

12:37.180 --> 12:39.310
Remarquez que le tutoriel change à nouveau.

12:39.340 --> 12:43.020
Je peux maintenant saisir quelques informations, puis je saisirai la bonne réponse ici.

12:43.030 --> 12:44.080
Un, deux, trois, quatre.

12:44.320 --> 12:45.310
Cliquez, connectez-vous.

12:45.340 --> 12:46.720
Il est indiqué Waiting for a result.

12:46.720 --> 12:49.250
Puis il est indiqué : Vous avez terminé le didacticiel.

12:49.270 --> 12:55.960
L'intégration est donc aussi étroite que si elle faisait partie de la logique de base, mais vous bénéficiez des avantages suivants

12:55.960 --> 12:56.920
séparation.

12:56.920 --> 13:02.740
Dans la première partie de cette vidéo, j'ai mentionné l'un des avantages de ce tutoriel.

13:03.870 --> 13:09.030
Le fait qu'il soit séparé vous permet peut-être de ne l'exécuter que pendant la première minute de jeu.

13:09.240 --> 13:14.730
Je pourrais simplement désactiver le tutoriel dans le coin et la logique de base du jeu n'aurait pas besoin de le savoir.

13:14.730 --> 13:16.020
du tutoriel.

13:16.020 --> 13:18.290
Elle n'a pas besoin de savoir s'il est activé ou non.

13:18.300 --> 13:22.020
Ou imaginez qu'il y ait un menu des paramètres et que les paramètres aient.

13:22.020 --> 13:23.010
Cochez cette case.

13:23.010 --> 13:27.470
Si vous voulez le tutoriel, cochez cette case si vous ne voulez pas le tutoriel.

13:27.480 --> 13:33.270
Cela permet également d'activer ou de désactiver la petite fenêtre dans le coin.

13:34.360 --> 13:34.770
Très bien.

13:34.780 --> 13:36.160
C'est tout pour cette démo.
