WEBVTT

00:00.750 --> 00:01.050
De acuerdo.

00:01.080 --> 00:03.900
Ahora echemos un vistazo a la demo del recuento.

00:03.930 --> 00:09.600
Esta es una demo creada usando la arquitectura mini MVC para unity.

00:09.630 --> 00:16.860
Puedes consultar el curso Udemy si quieres ver todas las enseñanzas sobre cómo y por qué la arquitectura

00:16.860 --> 00:22.700
y la unidad es un reto y por qué el mini MVC es una gran solución impulsada por la comunidad.

00:22.710 --> 00:27.870
Además, el marco de trabajo en sí es de libre acceso, por lo que puede comprobar el enlace y usted puede simplemente

00:27.870 --> 00:30.000
jugar con el código fuente si quieres.

00:30.630 --> 00:34.890
Así que esto se basa en los conceptos de arquitectura MVC.

00:34.890 --> 00:38.790
Hay un curso Udemy que repasa el siguiente contenido.

00:38.820 --> 00:40.290
La Introducción del curso.

00:40.290 --> 00:46.890
Hablo de unity, hablo de diseño de software y del mini framework MVC para unity.

00:47.040 --> 00:50.730
Luego, más información sobre cada uno de esos temas.

00:50.730 --> 00:56.040
Aquí puedes ver que hay proyectos de ejemplo incluidos, pero hoy vamos a repasar algunos más

00:56.040 --> 00:56.760
demos.

00:56.760 --> 01:00.430
En particular, vamos a ver la demo de conteo.

01:00.430 --> 01:02.680
Así que vamos a echarle un vistazo.

01:04.210 --> 01:07.510
Aquí estoy en el mini proyecto Max.

01:07.510 --> 01:13.330
Cuando descargues e instales eso, puedes ir aquí y hacer click en samples.

01:13.330 --> 01:17.710
Asi que mini max y luego samples e importar esos samples.

01:17.710 --> 01:24.910
Ya he hecho eso aquí, así que podemos ver más y vamos a ver el recuento.

01:25.480 --> 01:28.660
Empezaré ejecutando la demo.

01:32.550 --> 01:35.430
Así que aquí en la pantalla, es un poco pequeña.

01:35.430 --> 01:38.220
Veamos si podemos ir así.

01:38.250 --> 01:38.700
Allá vamos.

01:38.710 --> 01:39.560
Es un poco más grande.

01:39.570 --> 01:44.550
Esta es la demo más sencilla incluida en el curso.

01:44.550 --> 01:49.530
Así que tenemos un poco de vista aquí que dice recuento de texto hasta mini ejemplo.

01:49.530 --> 01:53.360
Y luego hay un botón contador que muestra el número 23.

01:53.370 --> 01:58.770
Creo que empiezo con un valor distinto de cero sólo porque cargo desde un servicio.

01:58.800 --> 02:03.540
Entonces podemos hacer clic aquí y si hago clic en cualquier parte de la pantalla, sube.

02:03.540 --> 02:06.750
Mientras hago clic, vamos a parar y empezar la escena de nuevo.

02:07.600 --> 02:10.600
Empieza siempre en 23 y luego haremos clic arriba.

02:10.600 --> 02:11.620
Entonces miraremos en el código.

02:11.620 --> 02:13.330
¿Por qué empieza en 23?

02:14.670 --> 02:15.660
Eso es.

02:15.690 --> 02:17.910
Haciendo un clic, mostrándolo en la pantalla.

02:17.910 --> 02:22.610
Ahora, no necesitas necesariamente una arquitectura compleja para este ejemplo.

02:22.620 --> 02:28.110
Probablemente podrías arreglártelas con un mono-comportamiento y hacer que todo el ejemplo funcione.

02:28.110 --> 02:31.980
Pero pretende ser una forma fácil de aprender y entender los fundamentos.

02:33.390 --> 02:36.510
Y luego imagina llevarlos a un juego como Fortnite, ¿verdad?

02:36.630 --> 02:38.310
Eso es mucho más complejo.

02:38.310 --> 02:40.460
Y querrías aprender estos conceptos básicos aquí.

02:40.470 --> 02:43.380
Echemos un vistazo a la configuración de la escena.

02:44.790 --> 02:48.870
Así que tenemos un objeto de juego mundo que sólo tiene la cámara y la luz direccional.

02:48.900 --> 02:50.670
No pasa nada interesante aquí.

02:50.700 --> 02:58.290
Luego tenemos un lienzo unity UI aquí con nuestro texto de título y nuestro texto de estado aquí.

02:59.010 --> 03:01.110
Acerquémonos un poco más.

03:01.140 --> 03:02.160
Allá vamos.

03:04.730 --> 03:05.660
Allá vamos.

03:06.170 --> 03:10.550
Luego tenemos el mini ejemplo en sí.

03:10.550 --> 03:14.000
Este es el mono-comportamiento que inicia la demo.

03:14.150 --> 03:20.240
Crea el propio mini y trae la vista y el concepto de controlador.

03:20.240 --> 03:21.260
Así que vamos a echarle un vistazo.

03:21.260 --> 03:23.120
Vamos a abrir el código fuente aquí.

03:25.700 --> 03:27.870
Um, sólo asegúrese de que tenemos.

03:30.310 --> 03:34.870
Y a diferencia de demos anteriores, me aseguraré de no tapar el código interesante aquí.

03:35.640 --> 03:36.290
Allá vamos.

03:36.300 --> 03:37.770
Así que aquí estamos en la parte superior.

03:37.770 --> 03:40.820
Este es el mini ejemplo que lo inicia todo.

03:40.830 --> 03:43.680
Tomo un campo serializado de The View.

03:43.680 --> 03:44.850
Miremos aquí.

03:45.180 --> 03:52.620
Tenemos un campo serializado de La Vista y arrastramos en La vista al igual que este, y luego está allí

03:52.770 --> 03:53.790
de vuelta al código.

03:53.790 --> 03:59.700
Todo lo que hago es crear el mini recuento, que se podría pensar como la propia aplicación.

03:59.700 --> 04:01.800
Esta es la estructura más padre aquí.

04:01.800 --> 04:03.950
Y le paso la vista, ¿correcto?

04:03.960 --> 04:11.010
Así que cada vez que queremos tener una vista en la escena, por lo general hacer este patrón, serializar, pasar

04:11.010 --> 04:11.940
de esta manera.

04:12.090 --> 04:15.030
Entonces echemos un vistazo al minicódigo de recuento.

04:18.550 --> 04:19.150
De acuerdo.

04:19.330 --> 04:27.400
Así que la cuenta hacia arriba mini va a extender el mini MVC, que va a tener estas partes en ella.

04:27.400 --> 04:32.200
Va a tener un contexto, que es la comunicación entre los cuatro niveles.

04:32.230 --> 04:34.420
Tiene el modelo, que es el almacenamiento de datos.

04:34.420 --> 04:41.320
Tiene la vista, que es lo que se presenta a la interfaz de usuario y lo que recibe la información del usuario.

04:41.350 --> 04:47.590
El controlador, que va a manejar cualquier lógica de negocio, la carne y las patatas, el grueso.

04:47.590 --> 04:52.750
de tu código estará probablemente en el controlador y luego el servicio de servicio es opcional y es sólo

04:52.750 --> 04:55.450
necesario si quieres llamar a cualquier dato externo.

04:55.480 --> 05:01.300
Cargando un archivo desde tu máquina local, llamando a un servicio backend online.

05:01.300 --> 05:05.950
Por ejemplo, aquí abajo en el constructor sólo tomo la vista y la almaceno.

05:06.250 --> 05:10.090
Luego en la inicialización creo un nuevo contexto const.

05:10.150 --> 05:14.560
Contexto de nuevo es sólo un objeto de bajo nivel que se requiere parte de esto.

05:14.740 --> 05:17.650
Luego construyo el modelo, el servicio y el controlador.

05:17.650 --> 05:24.680
Ahora, como es bastante común en estos ejemplos, el controlador tomará los otros tres niveles dentro y

05:24.680 --> 05:27.830
es realmente el controlador el que hace la mayor parte del trabajo.

05:27.830 --> 05:34.010
Así que lo que estamos viendo aquí es el Mini, pero el Mini realmente sólo prepara y alimenta el controlador

05:34.010 --> 05:36.040
y el controlador va a hacer la mayor parte del trabajo.

05:36.050 --> 05:41.840
Ahora una pregunta común es, bueno, ¿siempre tienes exactamente un modelo de vista y un controlador de servicio en

05:41.840 --> 05:42.560
en tu proyecto?

05:42.560 --> 05:44.270
Y podrías tener muchos, muchos más.

05:44.270 --> 05:51.290
Así que imagina este mini aquí configurando el modelo de jugador, jugador, controlador de jugador de servicio y que

05:51.290 --> 05:57.680
trabajando por su cuenta y luego tener el meta modelo de juego, meta servicio de juego y meta controlador de juego

05:57.680 --> 06:04.100
meta juego es a menudo donde tienes tus servicios de juego conectando cosas al back-end, permitiendo que el

06:04.100 --> 06:09.890
usuario almacenar su progreso, conectarse con amigos, todas esas características sociales, ser capaz de compartir

06:09.890 --> 06:16.700
cosas de esa manera para que pueda tener cada una de esas áreas de su proyecto ser minis separadas o controladores separados.

06:16.700 --> 06:19.580
Entonces verás que todo se inicializa aquí.

06:19.580 --> 06:22.520
Así que ahora vamos a ver cada uno de estos tres.

06:22.520 --> 06:24.080
Así que en el modelo.

06:25.540 --> 06:26.080
Miembro.

06:26.080 --> 06:31.450
Todo lo que estamos haciendo aquí es hacer clic en la pantalla y ver un recuento de números 23, 24, 25.

06:31.480 --> 06:35.950
Así que sólo tenemos que almacenar este int usted podría almacenarlos como un simple int.

06:35.950 --> 06:43.870
Yo uso algo en todas mis demos llamado int observable, que es un int que también despacha

06:43.870 --> 06:45.780
un evento cada vez que cambia.

06:45.790 --> 06:47.620
Muy útil para la vinculación de datos.

06:47.950 --> 06:50.730
Aquí todo lo que hago es poner el valor a cero.

06:50.740 --> 06:55.720
Ahora recuerda que cuando ejecutamos la demo, se inicia en el valor de 23, por lo que todavía no hemos visto por qué se inicia

06:55.720 --> 06:59.260
en 23 porque aquí parece que va a empezar en cero.

06:59.650 --> 07:01.570
Entonces miremos el servicio.

07:02.270 --> 07:07.070
El servicio va a heredar del servicio base, que es opcional.

07:07.310 --> 07:10.850
Cada vez que extiendes de las clases base, es opcional.

07:10.850 --> 07:16.460
Pero lo que queremos hacer aquí es utilizar el servicio de base porque esto va a poner en marcha algunos interesantes

07:16.730 --> 07:17.800
interesantes para nosotros.

07:17.810 --> 07:20.510
Muy ligero, pero práctico.

07:20.660 --> 07:25.510
Entonces aquí abajo almacenamos un valor y es aquí donde obtenemos ese valor.

07:25.520 --> 07:26.340
23.

07:26.360 --> 07:33.110
Así que vamos a cargar un archivo de texto local y luego cualquiera que sea el valor que cargamos de ese local

07:33.110 --> 07:37.330
vamos a enviarlo al modelo.

07:37.340 --> 07:42.380
Y si yo fuera a ver este archivo de texto, vamos a hacerlo ahora mismo.

07:42.380 --> 07:44.870
Recursos, texto, recuento de texto.

07:44.900 --> 07:47.150
Podemos ver que empieza en 22.

07:47.180 --> 07:49.790
Así que antes decía 23, pero empieza por 22.

07:50.660 --> 07:53.030
Por eso empieza en 22.

07:53.040 --> 07:54.190
Si modificamos este valor.

07:54.200 --> 07:56.000
Ahora, este es un ejemplo tonto.

07:56.000 --> 07:59.960
¿Por qué tu modelo de datos no codifica el valor en Do sostenido?

07:59.990 --> 08:00.920
Ciertamente podrías.

08:00.950 --> 08:04.730
Pero aquí quería mostrar un ejemplo de lo que es un servicio.

08:04.760 --> 08:09.950
Un servicio carga cualquier dato externo desde archivos locales o desde servicios back-end.

08:10.280 --> 08:11.720
Eso es todo.

08:11.720 --> 08:12.740
Ese es el servicio.

08:12.740 --> 08:13.880
Ahora veamos el controlador.

08:13.880 --> 08:15.350
Esta es la parte más compleja.

08:16.310 --> 08:19.720
Así que el controlador se va a extender desde el controlador base.

08:19.730 --> 08:23.600
Como dice el comentario, extender desde la base es siempre opcional.

08:23.960 --> 08:29.990
Lo hacemos aquí de nuevo porque hay un poco de código boilerplate común que se hace por ti.

08:30.080 --> 08:35.330
Entonces el controlador aquí en la inicialización va a establecer el texto de la interfaz de usuario.

08:36.000 --> 08:39.510
Luego va a cargar el servicio que acabamos de ver.

08:40.450 --> 08:42.790
Entonces cuando el servicio se cargue.

08:43.910 --> 08:49.160
Se va a establecer el valor del contador del modelo a lo que el servicio acaba de cargar.

08:49.160 --> 08:50.890
Así que el servicio va y obtiene el valor.

08:50.900 --> 08:51.860
22.

08:51.890 --> 08:56.870
Lo pasa al modelo y ahora el modelo tiene ese valor como inicial.

08:56.870 --> 08:59.850
Por eso empieza en 22 y no en cero.

08:59.930 --> 09:03.920
A continuación, escuchamos cualquier momento, en cualquier lugar de la pantalla se hace clic.

09:03.920 --> 09:06.970
Y si se hace clic en la pantalla, vamos aquí abajo.

09:06.980 --> 09:09.680
Sólo incrementa el modelo en uno.

09:09.800 --> 09:11.570
Y eso es todo.

09:11.600 --> 09:13.640
Así que vamos a ejecutar la demo una vez más.

09:14.940 --> 09:20.880
Así que todavía está, supongo que en algún lugar estoy añadiendo, Oh, espera, en realidad, cuando hice clic en la pantalla.

09:20.880 --> 09:21.720
Exacto.

09:21.990 --> 09:24.060
Sólo para cargar la escena aquí.

09:24.060 --> 09:26.000
Por eso está cargando una más.

09:26.010 --> 09:27.390
Así que carga 22.

09:27.390 --> 09:30.450
Hago clic en la pantalla, muestra 23 y esa es la demo.

09:30.900 --> 09:32.460
Eso es todo para esta demo.
