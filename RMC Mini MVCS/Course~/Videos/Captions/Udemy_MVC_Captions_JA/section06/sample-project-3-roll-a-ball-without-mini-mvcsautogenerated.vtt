WEBVTT

00:00.150 --> 00:04.260
Primero, veamos la versión sin muchos, MVCs añadidos.

00:05.260 --> 00:11.860
Aquí estamos en un proyecto unity vacío donde he añadido el mini framework MVCs así como las muestras.

00:12.070 --> 00:18.040
Aquí está la estructura de carpetas para el juego Rollerball sin muchos desde que hemos visto la estructura de carpetas

00:18.040 --> 00:19.490
de otras muestras antes.

00:19.510 --> 00:20.640
Entremos de lleno.

00:20.650 --> 00:23.330
En primer lugar, vamos a ejecutar la escena y ver cómo se reproduce.

00:23.350 --> 00:28.840
La interfaz de usuario se actualiza mostrando que tengo cero puntos y que las instrucciones son utilizar las teclas de flecha.

00:28.840 --> 00:31.510
También tengo un botón de reinicio en el que puedo hacer clic.

00:32.320 --> 00:36.430
Usaré las cuatro flechas del teclado para mover la bola.

00:38.280 --> 00:42.660
Ahora, puede que no seas capaz de oírlo en el vídeo, pero está reproduciendo un ruido cada vez que recojo uno

00:42.660 --> 00:49.170
de estas pastillas, así como reflejarlo en la puntuación de interfaz de usuario actualizada, el estado cambiado a usted gana.

00:49.170 --> 00:51.900
Así que el juego ha terminado y ya no puedo introducir más datos.

00:51.900 --> 00:55.170
Ya no puedo introducir con las teclas, pero voy a pulsar el botón de reinicio.

00:55.170 --> 00:58.080
El botón de reinicio muestra un mensaje que puedo cancelar.

01:01.230 --> 01:02.520
O puedo confirmar.

01:05.820 --> 01:10.020
Confirmar reinicia el juego como si no hubiera jugado todavía y puedo jugar de nuevo.

01:10.830 --> 01:11.520
Ya está.

01:12.000 --> 01:13.850
Aquí estamos en el script de ejemplo.

01:13.860 --> 01:19.170
Como en los otros ejemplos, el script de ejemplo de alto nivel extiende el comportamiento de mono.

01:19.170 --> 01:22.170
De esta forma puede situarse sobre un objeto del juego en la escena.

01:22.170 --> 01:28.200
Tenemos tres campos serializados aquí para que este ejemplo pueda llegar a la escena y acceder a un

01:28.200 --> 01:34.020
objeto de juego para el jugador, un objeto de juego para la interfaz de usuario y una lista de todos los objetos de recogida en la escena.

01:34.020 --> 01:36.480
Mantenemos un estado de alto nivel para.

01:36.510 --> 01:38.460
¿Ha terminado el juego?

01:38.460 --> 01:42.960
¿Está el juego actualmente en pausa y algunos otros valores de puntuación?

01:43.740 --> 01:46.770
Y algunos otros valores de puntuación en el método de inicio.

01:46.770 --> 01:53.130
Escuchamos desde aquí, en el script principal del juego, en la interfaz de usuario del reproductor, algunos eventos clave aquí en el método de inicio.

01:53.130 --> 01:58.290
update, que se ejecuta en cada fotograma mientras la escena se esté ejecutando, tenemos nuestro bucle principal del juego.

01:58.290 --> 02:04.080
Si en algún momento se acaba el juego o estamos en pausa, salimos del bucle para que no pase nada más.

02:04.080 --> 02:07.590
Es este script en el que estamos aquí el que tiene el control de las recogidas.

02:07.590 --> 02:13.590
Recorre todos los pickups y los rota para darles esa rotación cosmética.

02:13.590 --> 02:18.750
La razón por la que se hace aquí y no dentro del pickup, por ejemplo, es sólo para que cuando el juego

02:18.750 --> 02:21.450
se detiene, las pastillas también se detienen.

02:21.450 --> 02:27.270
Y por último aquí desde el ámbito del juego, capturamos la entrada del usuario y la pasamos a lo largo del jugador para que

02:27.270 --> 02:28.890
la pelota pueda rodar por aquí.

02:28.890 --> 02:34.230
En el método de carga, cargamos desde un archivo de texto local para obtener el número máximo de puntos necesarios para

02:34.230 --> 02:34.650
ganar.

02:34.650 --> 02:40.380
Carga el número tres como hemos visto en demos anteriores, esto es un ejemplo, solo como excusa

02:40.380 --> 02:41.730
para usar la capa de servicio.

02:41.730 --> 02:43.770
Una vez que nos fijamos en la versión mini MVC.

02:43.770 --> 02:49.590
Por supuesto, este valor podría ser codificado aquí, pero en su lugar lo cargamos desde un script sólo como un ejemplo

02:49.590 --> 02:50.520
de datos externos.

02:50.520 --> 02:56.760
Periódicamente, cuando el juego aquí quiere actualizar la interfaz de usuario en pantalla, podemos llamar a este método en cualquier momento

02:56.760 --> 03:00.990
que se pulse el botón UI para reiniciar, se ejecutará este método.

03:00.990 --> 03:07.530
Pausamos el juego, instanciamos una ventana de diálogo en pantalla que flota sobre el resto del juego, Mango

03:07.530 --> 03:12.570
la consecuencia Si el usuario hace clic, cancelar en el diálogo y manejar la consecuencia.

03:12.570 --> 03:16.920
Si el usuario confirma reiniciar el juego cada vez que el jugador colisione con la recogida.

03:16.920 --> 03:21.630
Si se llama a este método el objeto pickup se vuelve invisible y se reproduce un sonido.

03:21.630 --> 03:28.800
La puntuación cuenta de 0 a 1 a 2 a 3, y luego cuando alcanza el valor máximo requerido, que

03:28.800 --> 03:32.090
típicamente es tres, entonces el juego termina y ganas.

03:32.100 --> 03:34.050
Eso es todo en cuanto a la lógica del juego.

03:34.050 --> 03:35.760
Veamos la jerarquía de la escena.

03:35.760 --> 03:41.640
Así que en la jerarquía de escenas aquí, si selecciono el ejemplo de juego en sí, vemos algunos campos serializados

03:41.640 --> 03:47.130
en el inspector, incluyendo una referencia al jugador, la interfaz de usuario, y cada recogida en la escena.

03:47.130 --> 03:52.800
El jugador está aquí con el script del jugador, la UI está aquí con el script de la UI, y cada uno de nuestros pickups

03:52.800 --> 03:55.860
se almacena aquí bajo el mismo objeto padre del juego.

03:55.860 --> 03:57.630
Cada uno tiene un script de recogida encima.

03:57.630 --> 04:01.170
Echemos un último vistazo al juego ejecutándose de nuevo para poder pulsar play.

04:01.170 --> 04:03.150
Puedo deambular por aquí.

04:03.360 --> 04:06.780
Observa que las pastillas están girando.

04:09.370 --> 04:14.950
Y si pulso el botón de reinicio mientras el prompt está aquí arriba, mientras esta ventana de diálogo se está mostrando,

04:14.950 --> 04:21.220
los cubos no giran, es un pequeño detalle visual, pero es una pista de que este juego es capaz de

04:21.220 --> 04:26.710
guardar el estado de cuando estamos en pausa, así como cuando el juego ha terminado.

04:26.710 --> 04:29.710
Mira cuando gane la recogida, deja de girar también.

04:36.290 --> 04:42.290
Tengo uno y el pickup deja de girar manejando el estado como se acaba el juego y se pausa el juego parece que

04:42.290 --> 04:48.050
pequeños detalles, pero tenerlos suavemente orquestados a lo largo de las preocupaciones como vemos aquí demuestra

04:48.050 --> 04:49.850
un buen y simple diseño de juego.
