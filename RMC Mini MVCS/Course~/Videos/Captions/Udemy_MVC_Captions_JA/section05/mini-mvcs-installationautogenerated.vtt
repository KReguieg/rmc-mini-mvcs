WEBVTT

00:00.390 --> 00:03.270
ミニMVCのインストール。

00:04.310 --> 00:06.980
全ソースコードはgitで無料公開されています。

00:07.010 --> 00:08.870
下にリンクがあります。

00:08.870 --> 00:11.880
インストールはこのリンクから行います。

00:11.900 --> 00:13.850
新しいunityプロジェクトを作成します。

00:13.850 --> 00:19.610
unityの最新のロードをお勧めします。このパッケージをプロジェクトにインポートします。

00:19.610 --> 00:27.410
Unity のトップメニューから Window Package Manager Add package from git URL を選択し、Add package from git URL を選択します。

00:27.410 --> 00:29.120
gitページの一番上にあるURLを使います。

00:29.300 --> 00:31.640
お気に入りのウェブブラウザで見てみましょう。

00:31.640 --> 00:37.460
GitHub のプロジェクト・レポを見ると、code をクリックすると git URL が表示されます。

00:37.490 --> 00:39.950
これをコピーしてunityに取り込みます。

00:39.980 --> 00:44.840
ここでは空のunityプロジェクトで最新バージョンのunityを使っています。

00:45.690 --> 00:47.490
パッケージマネージャーを開きます。

00:58.370 --> 01:03.970
パッケージマネージャーは現在の依存関係をすべて表示し、さらに追加することができます。

01:03.980 --> 01:07.500
プラスボタンを押して、新しいgit URLを追加します。

01:07.520 --> 01:13.970
githubのレポから取得したURLを貼り付けると、ミニMVCがあなたのレポに追加されます。

01:13.970 --> 01:14.540
プロジェクトに追加されました。

01:14.540 --> 01:20.000
プロジェクトウィンドウを見ると、この例ではassetsに何も入っていないことがわかります。

01:20.000 --> 01:24.440
パッケージの下にはたくさんのMVCが見えます。

01:26.280 --> 01:30.780
というわけで、ちょっと話がそれましたが、unityとpackagesについて少し。

01:30.780 --> 01:34.590
歴史的に、Unityはアセットストアを通してアセットを提供していました。

01:34.620 --> 01:40.470
これらのアセットはzipファイルのような形でダウンロードされ、プロジェクト内で解凍すると

01:40.470 --> 01:41.510
使用することができます。

01:41.520 --> 01:43.270
このシステムはかなりうまくいった。

01:43.290 --> 01:47.750
数年前、ユニティはこのシステムの提供方法を大幅に拡大した。

01:47.760 --> 01:53.880
アセットストアはまだコンセプトとして存在しますが、サードパーティからダウンロードするようになりました、

01:53.880 --> 01:58.290
このパッケージも含めて、Unityのパッケージマネージャーからダウンロードすることができます。

01:58.290 --> 02:03.120
|にできるようにあなたがそれをすることができます本当に出くわすことあなたは、実際には私のパートナーとi約束、誰でも素早くはちょうど無視これらの一見正確にどのように{}人のことを忘れることができます。

02:03.120 --> 02:04.050
これまで見てきたように

02:04.350 --> 02:08.370
また、開発者用のサンプルとして他の人と共有することもできます。

02:08.370 --> 02:12.000
この後のセクションで、多くのMVCのサンプルを見ていきましょう。

02:12.000 --> 02:17.040
このパッケージや他のパッケージを使っているときは、定期的にパッケージマネージャーを確認してください。

02:17.040 --> 02:22.110
新しいバージョンがリリースされているかどうかを確認することで、常に最新のコードを実行することができます。

02:22.110 --> 02:25.380
セクションでは、ミニMVCについて見てきました。

02:25.380 --> 02:31.980
このセクションでは、ミニMVCの概要を説明し、長所と短所、いくつかの特徴や利点についてお話しました。

02:31.980 --> 02:34.620
02:31.980→02:34.620他のフレームワークと比較して軽いということです。

02:34.620 --> 02:38.540
このページでは、その特徴や利点を紹介します。

02:38.550 --> 02:40.020
次はもっと深く掘り下げていきます。

02:40.020 --> 02:45.420
このフレームワークの実際のコードを初めて見ることになります。

02:45.420 --> 02:46.290
例

02:46.290 --> 02:52.530
このコースで学んだ理論をどのようにC-shineに適用するか，サンプルプロジェクトを見ていきます。

02:52.530 --> 02:53.120
コード

02:53.130 --> 02:59.370
さて、ここまで多くの原則、パターン、コンセプト、哲学について話してきたと思うが

02:59.940 --> 03:04.230
サンプルコードで確認することで、すべてが見えてきます。

03:04.230 --> 03:06.180
楽しみにしています。

03:06.180 --> 03:07.050
ありがとう。
