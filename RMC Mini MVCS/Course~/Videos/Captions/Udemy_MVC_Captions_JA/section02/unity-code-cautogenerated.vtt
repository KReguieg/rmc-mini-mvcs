WEBVTT

00:00.240 --> 00:06.180
エディターはunityでゲームを開発する際にソフトウェア開発で使用する主なツールです。

00:06.180 --> 00:12.840
Unityのエディターでほとんどの作業を行い、別のコードエディターで作業を行います。

00:12.840 --> 00:13.590
コードを追加します。

00:13.620 --> 00:19.380
Unityのエディターはレイアウトという概念で構成されている。

00:19.380 --> 00:20.220
ウィンドウです。

00:21.280 --> 00:26.920
これらのウィンドウはそれぞれ機能を実行し、ゲームやプロジェクトに関する詳細な情報を提供してくれる。

00:27.730 --> 00:31.910
最も一般的で便利なウィンドウのレイアウトです。

00:31.930 --> 00:35.070
ヒエラルキー・ウィンドウは世界のオブジェクトを表示します。

00:35.080 --> 00:38.860
シーンビューはその世界を3Dで表現してくれる。

00:38.950 --> 00:42.100
2Dゲームプレイのために2Dに切り替えることもできる。

00:42.130 --> 00:48.130
プロジェクトウィンドウは、そのシーンに持ち込める全てのアセットとコードのライブラリです。

00:48.130 --> 00:54.550
これらのウィンドウで様々なアイテムや機能を選択すると、インスペクターウィンドウが表示されます。

00:54.550 --> 00:58.480
さらに詳細なフィールドが表示される。

00:58.480 --> 01:02.320
編集や実行がしやすいようにここに表示されます。

01:02.350 --> 01:05.200
Unityのエディターで実際に動かしてみましょう。

01:05.200 --> 01:06.580
新しいシーンを作成します。

01:06.580 --> 01:08.340
ゲームオブジェクトを作成します。

01:08.350 --> 01:11.530
ゲームオブジェクトにカスタムスクリプトを追加します。

01:11.530 --> 01:15.970
unityで再生ボタンを押して、スクリプトがランタイムにどう反映されるか見てみよう。

01:15.970 --> 01:21.460
そして、インスペクタの中でシリアライズされたフィールドを操作して、それがどのように機能するのかをデモンストレーションします。

01:21.580 --> 01:25.780
このコースの前提条件には、いくつかのフリーソフトが含まれています。

01:25.960 --> 01:29.350
まず、あなたの好きなウェブブラウザを使ってください。

01:30.270 --> 01:35.280
このコースで必要なことを調べるのに役立ちます。

01:35.850 --> 01:38.460
例えば、GoogleのChromeが手に入ります。

01:38.490 --> 01:41.070
次に、Unityエディタ本体を用意します。

01:41.400 --> 01:44.790
Unityエディタにはコードエディタも付属しています。

01:45.180 --> 01:50.760
また、トップナビのgetting startedボタンから好きなコードエディタを使うこともできます。

01:50.790 --> 01:55.350
Unity Softwareのパッケージには、さまざまな選択肢と価格があります。

01:55.350 --> 02:02.040
Unity, personalとUnity studentがあり、どちらも無料でおすすめです。

02:02.040 --> 02:03.220
このコースでの使用をお勧めします。

02:03.240 --> 02:08.340
これらのソフトには、これまで説明したすべての機能や特徴が含まれています。

02:09.960 --> 02:16.680
Unityをダウンロードし、空のプロジェクトで起動すると、見慣れたレイアウトが表示されます。

02:16.680 --> 02:19.280
ウィンドウが表示されます。

02:19.290 --> 02:20.760
新しいシーンを作りましょう。

02:20.760 --> 02:24.690
いろいろな方法がありますが、単純に新しいシーンをファイルします。

02:24.690 --> 02:28.260
基本的なビルドインシーンと階層を選びます。

02:28.260 --> 02:32.850
デフォルトのカメラと照明で基本シーンがセットアップされているのがわかります。

02:32.850 --> 02:34.410
新しいゲームオブジェクトを作りましょう。

02:34.410 --> 02:39.000
キューブを選択し、カスタムスクリプトをキューブに設置します。

02:39.030 --> 02:44.240
スクリプトを追加する方法はたくさんありますが、ここではゲームオブジェクト、3Dオブジェクト、キューブを選択します。

02:44.250 --> 02:47.760
これでゲームビューに立方体のレンダリングが表示されました。

02:47.790 --> 02:52.050
ゲームビューはエンドユーザーがゲームカメラから見るものを表しています。

02:52.050 --> 02:58.410
ヒエラルキーでキューブを選択すると、インスペクタウィンドウで現在のコンポーネントをすべて見ることができます。

02:58.410 --> 02:59.190
と表示されます。

02:59.490 --> 03:01.590
新しいカスタムコンポーネントを追加します。

03:06.400 --> 03:10.270
プロジェクトウィンドウに、最初に作成したアセットが表示されます。

03:11.010 --> 03:15.000
このスクリプトをダブルクリックして、デフォルトのコードエディターで開くことができます。

03:15.700 --> 03:21.190
新しいスクリプトを作成し、それを開くと、デフォルトのコードエディターが開きます。

03:21.400 --> 03:25.480
そして、unityにはちょっとしたテンプレートコードが含まれています。

03:25.630 --> 03:30.550
不要な部分を削除して、ゼロからコーディングするのも自由です。

03:31.030 --> 03:35.240
スクリプトのスライドをコピーして、それをunityに貼り付ける。

03:35.260 --> 03:40.990
unityのスクリプトのスライドをコピーして、unityに貼り付けます。

03:41.830 --> 03:45.100
ここではtransformコンポーネントを使ってオブジェクトを回転させています。

03:45.100 --> 03:48.680
ここでスクリプトを保存し、unityに戻ってシーンを実行します。

03:48.700 --> 03:56.150
実行時にupdateメソッド内のtransform rotateコードがキューブを回転させているのがわかります。

03:56.170 --> 04:02.890
また、キューブを選択した状態でUnityを実行すると、直列化されたフィールドのspeedが表示されます。

04:02.890 --> 04:04.030
操作できます。

04:12.970 --> 04:15.490
回転が速くなった。

04:24.390 --> 04:25.800
もっと遅く

04:28.760 --> 04:35.840
このように直列化されたフィールドに変更を加えることで、ゲームプレイの感触やゲームを微調整することができる。

04:35.840 --> 04:38.420
unityを止めることなくゲームデザインを変更することができます。

04:39.360 --> 04:43.480
これはunityエンジンの信じられないほど強力な機能です。

04:43.500 --> 04:47.670
unityエディタがゲームと開発の概算を示してくれます。

04:48.270 --> 04:52.650
unityエディタでは、ゲームと開発の概算が表示されます。

04:52.680 --> 04:56.360
いろいろな方法がありますが、ここではファイル、ビルド、実行を使います。

04:56.370 --> 05:00.510
これでプロジェクトがスタンドアロンビルドで実行されました。

05:00.540 --> 05:03.660
私の場合、Windows用に設定されています。

05:03.690 --> 05:09.360
Unityの概要、スクリプトの追加、プロジェクトのビルドは以上です。

05:10.920 --> 05:19.110
unity、unity ed、スクリプティングの簡単な概要で、unityがどれほど強力なものかを知ることができます。

05:19.110 --> 05:19.600
がいかに強力かがわかるだろう。

05:19.620 --> 05:22.820
unityがどれだけ強力なものなのかがわかるでしょう。

05:22.830 --> 05:27.120
セオリーエディターとCoding Inside Unityをレビューしました。

05:27.120 --> 05:33.210
ゲームオブジェクトは、プレハブやシーンを高レベルで使用するための基本的な概念です。

05:33.210 --> 05:38.970
クラスを作って、monoビヘイビアを拡張することで、多くのことができるようになります。

05:40.830 --> 05:47.130
次に、unityの仕様から少し離れて、ソフトウェア設計のコンセプトを見てみましょう。

05:47.130 --> 05:56.040
デザイン原則、デザインパターン、そしてUML(ユニファイド・モデリング言語)を見ていきます。

05:58.300 --> 05:59.170
ありがとうございました。
