WEBVTT

00:00.290 --> 00:00.740
Tudo certo.

00:00.740 --> 00:04.940
Vamos falar sobre como você faria um tutorial no jogo em alguma coisa.

00:06.730 --> 00:14.230
Antes de mais nada, por que ter um tutorial no jogo é útil para a experiência do usuário final e por que é um desafio

00:14.230 --> 00:15.280
para os desenvolvedores?

00:15.310 --> 00:25.000
Bem, muitas vezes, quando jogamos videogames, há regras suficientes sobre o mundo do jogo, sobre como interagir,

00:25.000 --> 00:30.010
como fazer a entrada que é preciso informar ao usuário explicitamente.

00:30.370 --> 00:37.180
Um tutorial é um dispositivo que, no primeiro minuto, dez minutos, uma hora de jogo, você dá ao

00:37.180 --> 00:39.490
informações adicionais ao usuário.

00:39.490 --> 00:46.720
Assim, quando ele se aproxima de um personagem, você explica como apertar um botão para iniciar a conversa.

00:46.720 --> 00:51.430
Considerando que, após cinco horas de jogo, você não precisaria mostrar a eles todas as vezes.

00:51.430 --> 00:57.640
Portanto, isso é algo temporário, geralmente feito no início ou na primeira vez que o usuário encontra

00:57.640 --> 00:58.360
alguma coisa.

00:58.540 --> 01:01.840
Portanto, é por isso que queremos tê-lo agora.

01:01.840 --> 01:03.100
Por que isso é um desafio?

01:03.130 --> 01:06.260
Bem, porque nem sempre acontece.

01:06.260 --> 01:10.370
Normalmente, quando criamos recursos de jogos, eles estão sempre disponíveis aqui.

01:10.370 --> 01:15.460
Queremos que isso aconteça somente no primeiro minuto, 10 minutos ou 1 hora, como mencionei.

01:15.470 --> 01:21.530
Portanto, você pode passar por todos os seus sistemas de jogo e fazer com que cada um deles diga: "Ei, se estivermos no

01:21.530 --> 01:26.030
primeiros dez minutos, faça essa coisa extra, mas, caso contrário, não faça a coisa extra.

01:26.030 --> 01:30.530
Mas isso se torna um pouco de código que você tem que colocar em muitos sistemas diferentes.

01:30.530 --> 01:34.960
Portanto, o que veremos aqui é como fazer tutoriais no jogo de uma maneira diferente.

01:34.970 --> 01:40.970
Vamos fazer com que a lógica central do jogo não saiba nada sobre os tutoriais e depois teremos um tutorial

01:40.970 --> 01:47.810
sentada ao lado e ouvindo o que o jogo principal está fazendo e ela só estará ativa

01:47.810 --> 01:53.900
durante os primeiros dez minutos e, depois, se ela desaparecer, o jogo principal nunca soube disso e não sabe

01:53.900 --> 01:54.920
mais sobre ele.

01:54.920 --> 01:56.870
Então, vamos dar uma olhada em como isso funcionaria.

01:57.650 --> 02:04.070
Agora, esta palestra e esta cena de demonstração fazem parte de um curso maior, que é a mini-arquitetura para

02:04.070 --> 02:06.920
curso de unidade que você pode acessar no link abaixo.

02:06.950 --> 02:12.740
Esse é um curso pago em que você pode ver exemplos de como esse recurso funciona.

02:12.740 --> 02:15.110
Sobre a teoria do design de software.

02:15.110 --> 02:16.700
Aqui está uma visão aprofundada.

02:16.700 --> 02:22.430
Analisando padrões de design, princípios de design, aprendendo UML, diagramação, cobrindo diferentes

02:22.460 --> 02:26.360
tipos de arquiteturas de unidade e por que você pode precisar delas.

02:26.930 --> 02:33.020
O alerta de spoiler aqui é que você as quer porque elas o ajudam a escalar projetos, criar projetos mais fáceis de manter

02:33.020 --> 02:40.010
código e a ter fluxos de trabalho mais livres de erros enquanto você constrói um projeto em escala.

02:40.700 --> 02:42.650
Inclui muitas coisas diferentes.

02:42.680 --> 02:48.740
Uma coisa que acrescentamos aqui é uma dezena ou mais de demonstrações adicionais desde que o curso foi criado pela primeira vez, e

02:48.740 --> 02:52.550
uma delas é como fazer um tutorial, e é essa que vamos examinar agora.

02:52.910 --> 02:54.830
Então, vamos pular para a unidade aqui.

02:55.580 --> 03:05.240
Portanto, se você obtiver o pacote mini MVCs gratuitamente do Git ou como parte do curso, você fará o download e instalará

03:05.240 --> 03:07.300
com as instruções do Git.

03:07.310 --> 03:11.840
E então, aqui na aba de amostras, você importará os exemplos.

03:11.840 --> 03:14.680
E é isso que vamos dar uma olhada aqui ao lado.

03:14.840 --> 03:15.950
Eu já fiz isso.

03:15.950 --> 03:24.560
Então, quando eu abro o tutorial mini, podemos ver que temos alguns pré-fabricados, temos

03:24.560 --> 03:31.370
a cena, temos um pouco de código aqui que contém a visualização do tutorial e o controlador do tutorial.

03:31.490 --> 03:33.350
Vamos prosseguir e executar isso.

03:40.760 --> 03:45.580
Sim, na verdade, vou mostrar algo antes de começarmos, porque observe o tutorial.

03:45.590 --> 03:46.640
Bem, vou fazer um grande e bonito.

03:47.870 --> 03:56.090
Então, o tutorial que está nesta cena está na caixa no canto superior, onde está escrito tutorial enter

03:56.090 --> 03:57.770
nome de usuário e senha.

03:57.800 --> 04:04.010
Aqui, para simplificar, estou imitando o funcionamento de uma experiência na Web.

04:04.040 --> 04:07.130
Muitas vezes, estamos fazendo login em experiências na Web.

04:07.130 --> 04:14.120
Você tem um nome de usuário e uma senha, que é o principal imóvel da tela, é o mini exemplo de login.

04:14.120 --> 04:21.530
Agora, esse exemplo está em uma cena diferente para ilustrar como este tutorial e o núcleo estão separados.

04:21.530 --> 04:22.880
lógica do jogo podem estar.

04:22.880 --> 04:29.000
Tenho o mini login como uma cena separada, portanto, é uma cena que você pode analisar em profundidade e

04:29.000 --> 04:35.480
e poderá ver quantos podem ser usados para colocar um nome de usuário, senha, botão de login e botão de logout.

04:35.480 --> 04:39.920
Então, ele está me dizendo aqui que a senha é um, dois, três, quatro.

04:39.920 --> 04:46.550
Então, se eu for em frente e digitar o nome, vou digitar o meu nome.

04:47.480 --> 04:48.200
Assim.

04:49.490 --> 04:53.660
Em seguida, começarei a digitar a senha se eu digitar pass.

04:55.360 --> 05:02.440
Observe que, quando começo a digitar a senha, o tutorial sabe que, a princípio, diz: "ei, digite o nome de usuário e a senha".

05:02.440 --> 05:03.190
a senha.

05:03.190 --> 05:09.010
Mas no momento em que você digita o nome de usuário e começa a digitar a senha, ele diz: Oh, você pode

05:09.010 --> 05:10.720
estar pronto para clicar em log in.

05:10.720 --> 05:18.640
Portanto, este é um exemplo arbitrário de como o tutorial está observando o seu progresso no núcleo

05:18.640 --> 05:22.140
experiência do usuário e lhe dá algumas dicas úteis.

05:22.150 --> 05:26.530
Poderia dizer: "Ei, aqui está um personagem com o qual você pode interagir no jogo".

05:26.530 --> 05:32.740
Clique em A para iniciar o diálogo e, depois que o usuário estiver familiarizado com isso, você nunca vai querer mostrar a ele o

05:32.740 --> 05:34.840
clique em A para iniciar o diálogo novamente.

05:34.840 --> 05:35.180
Certo?

05:35.260 --> 05:36.370
A mesma coisa aqui.

05:36.370 --> 05:39.700
Este está sentado ao lado mostrando informações.

05:39.700 --> 05:44.230
Isso pode estar disponível, talvez apenas temporariamente, durante o jogo.

05:44.230 --> 05:51.880
Mas a ideia central aqui é que o jogo em si não sabe sobre o tutorial.

05:52.300 --> 05:52.870
Certo?

05:53.350 --> 05:54.700
Em seguida, clico em log in.

05:54.700 --> 05:55.730
Eu recebo uma falha.

05:55.730 --> 05:58.130
Ele diz que você falhou no tutorial, tente novamente.

05:58.130 --> 06:01.250
Então, faço o logout e uso o passe.

06:01.250 --> 06:02.540
Um, dois, três, quatro.

06:02.540 --> 06:05.600
Que é a resposta verdadeira, como mostra a dica.

06:05.630 --> 06:06.470
Vou clicar em log in.

06:06.470 --> 06:10.070
Ele diz que você concluiu o tutorial, então veja como isso é bom.

06:10.070 --> 06:12.920
Esse tutorial fica ao lado e lhe dá dicas úteis.

06:12.920 --> 06:15.730
Ele certamente poderia lhe dar muito mais dicas do que as mostradas aqui.

06:15.740 --> 06:17.960
Vamos ver como essa estrutura funciona.

06:19.050 --> 06:27.150
Então, aqui temos a visualização do tutorial, que é a interface do usuário aqui com o...

06:28.640 --> 06:29.190
Aqui está.

06:29.210 --> 06:30.520
O título e o corpo.

06:30.530 --> 06:32.420
Então, ele está lá em cima no canto.

06:32.420 --> 06:33.710
UI simples do Unity.

06:35.740 --> 06:42.700
Em seguida, o Mini aqui vai pegar uma referência dessa visualização, que temos bem aqui.

06:42.970 --> 06:45.370
E vamos dar uma olhada em como o Mini está estruturado.

06:47.230 --> 06:48.760
Portanto, há um comentário aqui.

06:48.760 --> 06:49.630
Vou apenas lê-lo.

06:49.660 --> 06:53.170
O exemplo é o ponto de entrada principal para a demonstração.

06:53.440 --> 06:56.990
Um tutorial não precisa carregar uma cena separada.

06:57.010 --> 07:03.850
Isso é feito aqui apenas para demonstrar que este é um código completamente não relacionado que pode decorar adequadamente

07:03.880 --> 07:07.360
uma experiência de usuário em cima de um sistema sem saber.

07:07.360 --> 07:10.660
Portanto, poderíamos ter tudo nesta cena.

07:10.660 --> 07:16.300
Mas estou mostrando como, ei, se carregarmos esse exemplo de login, isso pode ser tão separado que pode ser

07:16.300 --> 07:17.230
colocado em cima.

07:17.230 --> 07:21.190
E essa ilustração de separação é boa, certo?

07:21.580 --> 07:23.920
Então, aqui vamos ver o The View.

07:24.950 --> 07:30.510
Agora, a maioria das cenas de demonstração que vêm, de fato, todas as cenas de demonstração, exceto esta que vem com o

07:30.510 --> 07:32.870
o Mini são demonstrações de uma cena.

07:32.930 --> 07:41.990
Mas aqui novamente, depois de carregar o Mini, vou em frente e carrego o exemplo de login com o Mini,

07:42.140 --> 07:44.600
que é apenas a parte do login.

07:44.600 --> 07:50.630
E foi criado muito antes desta demonstração e não sabe nada sobre o tutorial que funciona em cima do

07:50.630 --> 07:50.900
sobre ele.

07:50.900 --> 07:53.450
Ele nem precisou ser atualizado para isso.

07:53.630 --> 07:57.620
Depois, aqui embaixo, o que faço é criar uma ponte para o Mini.

08:02.760 --> 08:03.840
E então.

08:07.330 --> 08:09.040
Eu faço a fiação aqui em cima.

08:09.250 --> 08:15.880
Então, o que eu faço no make a bridge é pegar o modelo da cena carregada para que você possa ver

08:15.880 --> 08:17.800
o código acima para ver como isso é feito.

08:17.800 --> 08:24.790
Mas agora que eu sei, ok, aqui está o modelo da cena carregada, nós, como tutorial, precisamos ouvir

08:24.790 --> 08:25.600
para isso.

08:25.840 --> 08:36.640
Portanto, inicializo a visualização usando o contexto da lógica central e, em seguida, crio um controlador de tutorial

08:36.640 --> 08:37.390
aqui.

08:38.330 --> 08:41.570
E passo o modelo de login e a visualização.

08:41.660 --> 08:44.930
Portanto, aqui está a lógica do tutorial.

08:44.930 --> 08:47.930
Vamos dar uma olhada no controlador e ver como ele funciona.

08:52.110 --> 08:58.830
Então, o que eu faço é atualizar os tutoriais, uma pequena janela que diz a palavra tutorial, apenas para iniciar o

08:58.830 --> 08:59.790
clareza.

08:59.910 --> 09:04.230
Em seguida, começo a ouvir o modelo de login.

09:04.470 --> 09:07.150
Então, lembre-se, eu carrego essa cena extra.

09:07.170 --> 09:14.100
Eu pego o modelo dela porque foi criada usando o Mini, então eu posso pegar o modelo de login de

09:14.100 --> 09:18.390
e, em seguida, escuto um valor chamado Can I log in?

09:19.010 --> 09:23.180
E depois ouço alguns comandos diferentes.

09:23.300 --> 09:25.820
Assim, sempre que o login é feito.

09:28.030 --> 09:31.630
O botão de login é ativado e o login é verdadeiro.

09:31.630 --> 09:35.820
Assim, eu posso escutar isso para que eu possa passar pelo processo.

09:35.830 --> 09:44.020
Então, sempre que o comando de logout acontece, sempre que o comando de login é enviado, e sempre que o comando

09:44.020 --> 09:45.730
log in completado acontece.

09:45.730 --> 09:48.610
Portanto, há quatro coisas que eu pude ouvir.

09:48.610 --> 09:56.500
Agora, em teoria, se você estiver desenvolvendo o tutorial e a lógica central ao mesmo tempo, o passo seria

09:56.500 --> 09:57.340
seria assim.

09:57.340 --> 10:03.310
Quando você tiver a estrutura básica que temos aqui, digamos que você tenha introduzido a ideia de caminhar

10:03.310 --> 10:06.220
e conversar com os personagens em um jogo de RPG.

10:06.220 --> 10:13.810
Você gostaria que seu modelo de login principal expusesse um evento como Started conversation with character equals (Conversa iniciada com personagem igual)

10:13.810 --> 10:14.470
Verdadeiro.

10:14.500 --> 10:19.960
Ou aqui está um novo comando que diz o comando de início de conversa.

10:19.990 --> 10:26.470
Qualquer um desses comandos deve fazer parte da lógica central do jogo e ser atualizado e despachado.

10:26.500 --> 10:33.260
Então, o tutorial aqui pode se conectar a isso, como vemos aqui, seja por meio do modelo ou do

10:33.260 --> 10:37.490
e poder ouvir essas coisas.

10:37.640 --> 10:45.200
Portanto, a utilidade aqui em baixo, vemos que sempre que o logout acontece na lógica central, eu

10:45.200 --> 10:53.180
atualizar o texto do tutorial para que a primeira frase seja "ok, é hora de entrar no login, digite o nome de usuário".

10:53.180 --> 10:53.990
e a senha.

10:54.440 --> 11:01.430
A qualquer momento, o login pode ser alterado, pois a lógica central sabe se podemos fazer o login neste momento

11:01.430 --> 11:02.510
momento ou não?

11:02.540 --> 11:07.340
O tutorial se atualiza novamente e fornece um pouco mais de informações.

11:07.700 --> 11:15.680
Sempre que o usuário tiver feito o login, o tutorial dirá que está aguardando o resultado e sempre que

11:15.680 --> 11:21.920
o login for concluído, ele ouve e diz: "Bem, se você foi bem-sucedido, então você foi bem-sucedido".

11:21.920 --> 11:25.790
no tutorial ou se você não foi bem-sucedido, então você falhou no tutorial.

11:25.820 --> 11:29.360
Portanto, trata-se de uma demonstração arbitrária aqui.

11:29.720 --> 11:32.120
Este é um exemplo meio bobo.

11:32.780 --> 11:34.910
Para dar ajuda em um formulário como este.

11:34.910 --> 11:40.520
Mas você pode imaginar que em um jogo pode haver muitas partes diferentes da lógica central que você gostaria de ter

11:40.520 --> 11:43.370
expor ao sistema de tutorial.

11:43.580 --> 11:50.450
Portanto, duas equipes diferentes em teoria, apenas para ilustrar novamente a separação, poderiam trabalhar em uma delas

11:50.450 --> 11:55.730
trabalhar na lógica central do jogo e a outra poderia trabalhar na lógica do tutorial, bem como em outros sistemas.

11:55.730 --> 12:01.490
Mas estou apenas mostrando a separação aqui e todos eles estão falando por meio do modelo de login e

12:01.490 --> 12:02.270
os comandos.

12:02.270 --> 12:03.170
Então é isso.

12:03.200 --> 12:05.390
Agora vamos dar uma olhada na demonstração em execução novamente.

12:07.120 --> 12:12.220
Novamente, a maior parte do espaço da tela é carregada de outra cena.

12:12.220 --> 12:15.450
Ele não sabe que foi carregado no tutorial.

12:15.460 --> 12:22.060
O tutorial fica no topo e tem apenas um pouco de visão no canto e mostra bem, é

12:22.060 --> 12:23.050
o tutorial.

12:23.050 --> 12:25.000
Digite o nome de usuário e a senha.

12:25.000 --> 12:27.400
Então eu começo a digitar e ele atualiza.

12:27.400 --> 12:29.860
Ele diz ok, clique em log in.

12:30.520 --> 12:31.800
Agora eu clico em login.

12:31.840 --> 12:33.610
Ele diz Waiting for result (Aguardando resultado).

12:33.610 --> 12:35.410
E então diz, Oh, você falhou.

12:35.470 --> 12:37.150
E eu clico em logout.

12:37.180 --> 12:39.310
Observe que o tutorial muda novamente.

12:39.340 --> 12:43.020
Agora posso digitar algumas coisas e depois digitarei a resposta correta aqui.

12:43.030 --> 12:44.080
Um, dois, três, quatro.

12:44.320 --> 12:45.310
Clique, faça o login.

12:45.340 --> 12:46.720
Diz "Waiting for a result" (Aguardando um resultado).

12:46.720 --> 12:49.250
E então diz, Você completou o tutorial.

12:49.270 --> 12:55.960
Portanto, ele é tão bem integrado como se fosse parte da lógica central, mas você ganha o benefício disso

12:55.960 --> 12:56.920
separação.

12:56.920 --> 13:02.740
Portanto, na parte anterior deste vídeo, mencionei um dos benefícios desse tutorial.

13:03.870 --> 13:09.030
O fato de ser separado é que talvez você só queira que ele seja executado durante o primeiro minuto de jogo.

13:09.240 --> 13:14.730
Eu poderia simplesmente desativar o tutorial lá no canto e a lógica central do jogo não precisaria saber

13:14.730 --> 13:16.020
sobre o tutorial.

13:16.020 --> 13:18.290
Ela não precisa saber se está habilitado ou não.

13:18.300 --> 13:22.020
Ou imagine que haja um menu de configurações e que as configurações tenham.

13:22.020 --> 13:23.010
Marque esta caixa.

13:23.010 --> 13:27.470
Se você quiser o tutorial, marque esta caixa se você não quiser o tutorial.

13:27.480 --> 13:33.270
Isso também pode permitir que a pequena janela no canto seja ativada ou desativada.

13:34.360 --> 13:34.770
Ótimo.

13:34.780 --> 13:36.160
Então é isso para essa demonstração.
